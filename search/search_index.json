{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83e\udded PyLAMP Program","text":"<p>Welcome to the PyLAMP Program! This course introduces you to fundamental concepts, tools, and practices in software engineering using the LAMP Stack. Use the outline below to navigate through the modules.</p>"},{"location":"#pylamp-program-project-list","title":"\ud83d\udcd8 PyLAMP Program Project List","text":""},{"location":"#week-1-projects","title":"Week 1 Projects","text":"<ul> <li>Overview</li> <li>Introduction to mindsets</li> <li>Preserving your mental health and network</li> <li>Owning your learning</li> <li>Maping your mind</li> <li>Setting up your local coding environment</li> <li>Version control with Git and GitHub</li> <li>Shell navigation</li> <li>Command Line Editors:<ul> <li>Vi or Vim</li> <li>emacs</li> </ul> </li> <li>Markdown</li> </ul>"},{"location":"#week-2-projects","title":"Week 2 Projects","text":"<ul> <li>Coming Soon...</li> </ul>"},{"location":"#week-3-projects","title":"Week 3 Projects","text":"<ul> <li>Coming Soon...</li> </ul>"},{"location":"#week-4-projects","title":"Week 4 Projects","text":"<ul> <li>Coming Soon...</li> </ul>"},{"location":"#week-5-projects","title":"Week 5 Projects","text":"<ul> <li>Coming Soon...</li> </ul>"},{"location":"#resources","title":"\ud83d\udcc2 Resources","text":"<ul> <li>Coming Soon...</li> </ul> <p>\ud83d\udca1 Tip: You can navigate using the sidebar or click any link above to go directly to a topic.</p>"},{"location":"se_basics/0x01-introduction_to_mindsets/","title":"Overview","text":"<p>In addition to getting your technical tools set up, there\u2019s another tool that\u2019s critical to your success any area of life: growth mindset. Today, you\u2019ll start to better understand what it is and what it isn\u2019t\u2013 and you\u2019ll start to practice using it. First stop is a TED talk by Stanford University professor, Carol Dweck.</p>"},{"location":"se_basics/0x01-introduction_to_mindsets/#resources","title":"Resources :","text":"<ul> <li>Angela Duckworth</li> <li>carol Dweck: Growth Mindset</li> <li>The power of yet</li> </ul>"},{"location":"se_basics/0x01-introduction_to_mindsets/#learning-objectives-include","title":"Learning objectives include :","text":"<ul> <li>What is grit?</li> <li>What evidence is there that grit is important? (Can you briefly describe one study that Duckworth mentions?) (What groups were examined, what was the treatment they received, and what was the result?)</li> <li>What is growth mindset?</li> <li>What is fixed mindset?</li> <li>How do brains behave when they are in fixed vs. growth mindset?</li> <li>What evidence is there that growth mindset is important? You should be able to describe 1 study at a high level: What was the group that was studied? What was the \u201ctreatment\u201d (or variable that the different participants received)? What was the result of that study? (again, high level, no need for small details)</li> </ul>"},{"location":"se_basics/0x02-mental_health_network/","title":"Preserving your mental health &amp; Conquering imposter syndrome","text":"<p>As you dive into this program, you are likely to have different kinds of days. These could be easy days where everything makes sense, hard days where you feel you like crushing your computer because for some reason you don\u2019t understand why your code is working. Other days you just want to quit because it feels you can\u2019t push through the program.</p> <p>Irrespective of the days you have, always remember your mental health is key and important, just by getting started, you can do it and even when you think you can\u2019t continue and you feel your peers are ahead of you, look at your journey and own.</p>"},{"location":"se_basics/0x02-mental_health_network/#resources","title":"Resources","text":"<ul> <li>what is imposter syndrome and how can we combat it</li> <li>Imposter syndrom is bravery</li> <li>you are not an imposter, you are amazing</li> </ul>"},{"location":"se_basics/0x02-mental_health_network/#learning-objectives","title":"Learning Objectives","text":"<ul> <li>What is imposter syndrome?</li> <li>why is it important?</li> <li>How do you deal with imposter syndrome\"</li> </ul>"},{"location":"se_basics/0x02-mental_health_network/#your-network-is-your-net-worth","title":"Your network is your net worth","text":"<p>LinkedIn can be a valuable tool for software engineers looking to build their professional network, find job opportunities, showcase their skills and experience, and stay up-to-date with industry trends and insights.</p> <p>It\u2019s important to start building your LinkedIn professional network as early as possible, so start LinkedIn today!</p>"},{"location":"se_basics/0x02-mental_health_network/#creating-a-professional-linkedin-profile","title":"Creating a professional linkedin profile","text":"<ul> <li>Use a professional profile photo: Your profile photo is the first thing people see when they visit your LinkedIn profile. Make sure it\u2019s a professional headshot that reflects your industry and personal brand. If you do not have a professional headshot (like most of us), simply put a picture of yourself. Here is an article with examples and advice</li> <li>Craft a compelling headline: Your headline should be a brief summary of your professional experience, skills, and expertise. It should make people want to learn more about you. You are allowed to use ChatGPT for this.</li> <li>Write a summary that showcases your strengths: Your summary should highlight your professional strengths, experience, and career goals. It should be well-written and engaging, and it should make people want to connect with you. You are allowed to use ChatGPT for this.</li> <li>Customize your LinkedIn URL: Customizing your LinkedIn URL can make it easier for people to find you and remember your profile. It also looks more professional than the default URL.</li> <li>List your work experience and education: Make sure your work experience and education are up-to-date and complete. Be sure to include any relevant certifications, awards, or achievements.</li> <li>Use keywords: Use keywords throughout your profile to help people find you when they search for specific skills or expertise.</li> <li>Ask for recommendations: Recommendations from colleagues and supervisors can help to validate your skills and experience. Be sure to ask for recommendations from people who know your work well. Overall, a professional-looking LinkedIn profile should be well-written, complete, and engaging. It should showcase your strengths and expertise and make people want to connect with you.</li> </ul>"},{"location":"se_basics/0x03-owning_your_learning/","title":"Owning Your Learning","text":"<p>In any field you get to find yourself, being in charge of your learning journey is what will take you further. This project focuses on concepts that are essential for learning how to learn.</p>"},{"location":"se_basics/0x03-owning_your_learning/#resources","title":"Resources","text":"<ul> <li>The Feynman Learning technique</li> <li>How I tackle projects at ALX (Learn from Firdaus Salim)</li> <li>Focus and diffuse mode of thinking watch</li> <li>Focus and diffuse mode of thinking read</li> </ul>"},{"location":"se_basics/0x03-owning_your_learning/#learning-objectives","title":"Learning Objectives","text":"<ul> <li>What steps do i need to learn how to learn?</li> <li>What is the Feynman learning technique and how can I implement it?</li> <li>What does it mean to own my own learning journey?</li> <li>In what ways can I crack through if I don\u2019t get it?</li> </ul>"},{"location":"se_basics/0x04-map_your_mind/","title":"Map Your Mind","text":"<p>As a Software Engineer, critical thinking is a trait one must have in order to design solutions that solve problems most efficiently. This project unveils the thought process a Software Engineer should have and the processes they could take to solve a problem.</p>"},{"location":"se_basics/0x04-map_your_mind/#resources","title":"Resources","text":"<ul> <li>How to think like a programmer</li> <li>What is Pseudocode</li> <li>what is an algorithm</li> <li>How to write pseudocode</li> <li>Real life examples of pseudocode</li> <li>Practice examples of Pseudocode</li> <li>deepdive</li> <li>More practice examples</li> </ul>"},{"location":"se_basics/0x04-map_your_mind/#learning-objectives","title":"Learning Objectives","text":"<ul> <li>What is a Pseudocode?</li> <li>why is Pseudocoding important in programming?</li> <li>How do you write Pseudocodes?</li> </ul>"},{"location":"se_basics/0x04-map_your_mind/#tasks","title":"Tasks","text":""},{"location":"se_basics/0x04-map_your_mind/#task-0","title":"Task 0","text":"<p>Develop an algorithm that calculates the sum of squares of given input of numbers. You are going to create a flow chart and pseudo code.</p>"},{"location":"se_basics/0x04-map_your_mind/#task-1","title":"Task 1","text":"<p>Develop an algorithm that reads in three numbers and writes them all in sorted order. You are going to create a flow chart and pseudo code.</p>"},{"location":"se_basics/0x04-map_your_mind/#task-2","title":"Task 2","text":"<p>Develop an algorithm that calculates a running sum.</p> <p>A user will enter numbers that will be added to the sum and when a negative number is encountered, stop adding numbers and write out the final result. You are going to create a flow chart and pseudo code.</p> <p>General Tips: 1. You can make use of an online tool draw.io for designing your flowcharts. 2. Create the algorithm for each task into a flow chart, save a copy. 3. Create a folder in google drive named <code>Map your mind</code> and upload your file there. 4. Create pseudocode in a google doc and upload file to the folder as well. 5. Make sure you give access to anyone with link for both pseudocode and flowchart files. 6. Give access to anyone with link to the folder and forward your link to your PyLAMP Program instructor.</p>"},{"location":"se_basics/0x05-shell_navigation/","title":"Shell Navigation","text":"<p>Shell navigation entails moving around in th file structure of the operating system by using the command line.</p> <p>Commands are used to do this navigation, and depending on type of shell, different set of commands are used.</p> <p>This project explores the world of shell navigation.</p>"},{"location":"se_basics/0x05-shell_navigation/#resources","title":"Resources","text":"<ul> <li>Linux navigation</li> <li>Linux - looking around</li> <li>Linux - manipulating files</li> <li>Linux - /tmp</li> </ul>"},{"location":"se_basics/0x05-shell_navigation/#learning-objectives","title":"Learning Objectives","text":"<ul> <li>How to navigate in an Unix system</li> <li>How to list files and directories</li> <li>How to display the content of a file</li> <li>How to create a file or directory</li> <li>How to remove a file or directory</li> <li>How to move or copy a file or directory</li> </ul>"},{"location":"se_basics/0x05-shell_navigation/#tasks","title":"Tasks","text":"<p>Note: For each task do not forget to</p> <p>Validate the current directory.</p>"},{"location":"se_basics/0x05-shell_navigation/#task-0","title":"Task 0","text":"<p>Access your Linux terminal and 1. Change your working directory to <code>/root</code>. 2. Then, create an empty file <code>so_cool</code>.</p> <p>Don\u2019t forget to display the list of files of your current directory to validate the creation of the new file</p>"},{"location":"se_basics/0x05-shell_navigation/#task-1","title":"Task 1","text":"<p>Access your Linux terminal and 1. Change your working directory to <code>/root</code>. 2. Create an empty file <code>school</code>. 3. Then, copy the file <code>school</code> to <code>/tmp</code>.</p> <p>Don\u2019t forget to display the list of files of your current directory to validate the copy of the file</p>"},{"location":"se_basics/0x05-shell_navigation/#task-2","title":"Task 2","text":"<p>Access your Linux terminal and 1. Change your working directory to <code>/root</code>. 2. Create an empty file <code>old_school</code>. 3. Then, rename the file <code>old_school</code> to <code>new_school</code> (in the same directory).</p> <p>Don\u2019t forget to display the list of files of your current directory to validate the renaming of the file</p>"},{"location":"se_basics/0x05-shell_navigation/#task-3","title":"Task 3","text":"<p>Access your Linux terminal and 1. Change your working directory to <code>/root</code>. 2. Create an empty file <code>not_here</code> 2. Then, move the file <code>not_here</code> to <code>/tmp/right_school</code></p> <p>Don\u2019t forget to display the list of files of your current directory to validate the move of the file</p>"},{"location":"se_basics/0x05-shell_navigation/#task-4","title":"Task 4","text":"<p>Access your Linux terminal and 1. Change your working directory to <code>/root</code> 2. Create the file <code>ready_to_be_removed</code> 3. Then, delete the file <code>ready_to_be_removed</code></p> <p>Don\u2019t forget to display the list of files of your current directory to validate the removal of the file</p>"},{"location":"se_basics/0x05-shell_navigation/#task-5","title":"Task 5","text":"<p>Access your Linux terminal and 1. Change your working directory to <code>/root</code> 2. Then, create a directory <code>school_is_amazing</code></p> <p>Don\u2019t forget to display the list of directories of your current directory to validate the creation of the directory</p>"},{"location":"se_basics/0x05-shell_navigation/#task-6","title":"Task 6","text":"<p>Access your Linux terminal and 1. Change your working directory to <code>/root</code> 2. Then, remove the directory empty_directory</p> <p>Don\u2019t forget to display the list of directories of your current directory to validate the removal of the directory</p>"},{"location":"se_basics/0x06-emacs/","title":"Emacs","text":"<p>Emacs is a command line text editor that is accessible on the linux terminal.</p>"},{"location":"se_basics/0x06-emacs/#resources","title":"Resources","text":"<ul> <li>A Guided Tour of Emacs</li> </ul>"},{"location":"se_basics/0x06-emacs/#learning-objectives","title":"Learning Objectives","text":"<ul> <li>What is Emacs</li> <li>Who is Richard Stallman</li> <li>How to open and save files</li> <li>What is a buffer and how to switch from one to the other</li> <li>How to use the mark and the point to set the region</li> <li>How to cut and paste lines and regions</li> <li>How to search forward and backward</li> <li>How to invoke commands by name</li> <li>How to undo</li> <li>How to cancel half-entered commands</li> <li>How to quit Emacs</li> </ul>"},{"location":"se_basics/0x06-emacs/#tasks","title":"Tasks","text":""},{"location":"se_basics/0x06-emacs/#task-0","title":"Task 0","text":"<p>Navigate to <code>/root</code> and create a directory named <code>0x02_emacs</code></p>"},{"location":"se_basics/0x06-emacs/#task-1","title":"Task 1","text":"<p>What is the command to open a file from within Emacs? Write the answer into the file <code>/root/0x02_emacs/opening</code>.</p> <p>You can validate if the format of your answer is correct by displaying the file information:</p> <pre><code>root@hex:~# ls -l /root/0x02_emacs/opening\n-rw-r--r-- 1 root root 9 Nov 11 04:34 /root/0x02_emacs/opening\nroot@hex:~#\n</code></pre>"},{"location":"se_basics/0x06-emacs/#task-2","title":"Task 2","text":"<p>What is the command to save a file? Write the answer into the file <code>/root/0x02_emacs/saving</code>.</p>"},{"location":"se_basics/0x06-emacs/#task-3","title":"Task 3","text":"<p>What is the command to cut an entire line? Write the answer into the file <code>/root/0x02_emacs/cutting</code>.</p>"},{"location":"se_basics/0x06-emacs/#task-4","title":"Task 4","text":"<p>What is the command to paste? Write the answer into the file <code>/root/0x02_emacs/pasting</code>.</p>"},{"location":"se_basics/0x06-emacs/#task-5","title":"Task 5","text":"<p>What is the command to search forward? Write the answer into the file <code>/root/0x02_emacs/searching</code>.</p>"},{"location":"se_basics/0x06-emacs/#task-6","title":"Task 6","text":"<p>What is the command to undo? Write the answer into the file <code>/root/0x02_emacs/undoing</code>.</p>"},{"location":"se_basics/0x06-emacs/#task-7","title":"Task 7","text":"<p>What is the command to quit Emacs? Write the answer into the file <code>/root/0x02_emacs/quitting</code>.</p>"},{"location":"se_basics/0x07-vi/","title":"Vi or Vim","text":"<p>Vi is a command line text editor that is accessible on the linux terminal.</p>"},{"location":"se_basics/0x07-vi/#resources","title":"Resources","text":"<ul> <li>Basic vi Commands</li> </ul>"},{"location":"se_basics/0x07-vi/#learning-objectives","title":"Learning Objectives","text":"<ul> <li>What is vi</li> <li>Who is Bill Joy</li> <li>How to start and exit vi</li> <li>What are the command and insert modes, and how to switch from one to the other</li> <li>How to edit text</li> <li>How to cut and paste lines</li> <li>How to search forward and backward</li> <li>How to undo</li> <li>How to quit vi</li> </ul>"},{"location":"se_basics/0x07-vi/#tasks","title":"Tasks","text":""},{"location":"se_basics/0x07-vi/#task-0","title":"Task 0","text":"<p>Navigate to /root and create a directory named <code>0x03_vi</code></p>"},{"location":"se_basics/0x07-vi/#task-1","title":"Task 1","text":"<p>What is the command to insert text before the cursor? Write the answer into the file <code>/root/0x03_vi/inserting</code>.</p> <p>You can validate if the format of your answer is correct by displaying the file information:</p> <pre><code>root@hex:~# ls -l /root/0x03_vi/inserting\n-rw-r--r-- 1 root root 2 Nov 11 04:34 /root/0x03_vi/inserting\nroot@hex:~#\n</code></pre>"},{"location":"se_basics/0x07-vi/#task-2","title":"Task 2","text":"<p>What is the command to delete and cut the current line? Write the answer into the file <code>/root/0x03_vi/cutting</code>.</p> <p>Tips: - How to Copy, Cut and Paste</p>"},{"location":"se_basics/0x07-vi/#task-3","title":"Task 3","text":"<p>What is the command to paste the lines in the buffer into the text after the current line? Write the answer into the file <code>/root/0x03_vi/pasting</code>.</p>"},{"location":"se_basics/0x07-vi/#task-4","title":"Task 4","text":"<p>What is the command to undo what you just did? Write the answer into the file <code>/root/0x03_vi/undoing</code>.</p>"},{"location":"se_basics/0x07-vi/#task-5","title":"Task 5","text":"<p>What is the command to quit vi even though latest changes have not been saved for this vi call? Write the answer into the file <code>/root/0x03_vi/exiting</code>.</p>"},{"location":"se_basics/0x07-vi/#task-6","title":"Task 6","text":"<p>What is the command to move the cursor to the start of the current line? Write the answer into the file <code>/root/0x03_vi/beginning_of_the_line</code>.</p>"},{"location":"se_basics/0x07-vi/#task-7","title":"Task 7","text":"<p>What is the command to move the cursor to the end of the line? Write the answer into the file <code>/root/0x03_vi/end_of_the_line</code>.</p>"},{"location":"se_basics/0x08-git/","title":"0x08. Git","text":"<p><code>Git</code> <code>Code versioning</code> <code>Github</code></p> <p>Most of the projects in this program are supposed to be done in a Linux (Ubuntu) environment.</p> <p>For that matter, you will need to set up a similar environment for that purpose. This project is therefore a guide for you to set up the necessary coding environment irrespective of the operating system that you are using.</p>"},{"location":"se_basics/0x08-git/#resources","title":"Resources","text":"<p>Resources to learn Git About READMEs How to write a Git commit message</p>"},{"location":"se_basics/0x08-git/#resources-for-advanced-tasks","title":"Resources for advanced tasks","text":"<p>Learning branching Effective pull requests and other good practices for teams using GitHub</p>"},{"location":"se_basics/0x08-git/#learning-objectives","title":"Learning Objectives","text":"<ul> <li>What is source code management</li> <li>What is Git</li> <li>What is GitHub</li> <li>What is the difference between Git and GitHub</li> <li>How to create a repository</li> <li>What is a README</li> <li>How to write good READMEs</li> <li>How to commit</li> <li>How to write helpful commit messages</li> <li>How to push code</li> <li>How to pull updates</li> <li>How to create a branch</li> <li>How to merge branches</li> <li>How to work as collaborators on a project</li> <li>Which files should and which files should not appear in your repo</li> </ul>"},{"location":"se_basics/0x08-git/#general-requirements","title":"General Requirements","text":"<ul> <li>A <code>README.md</code> file at the root of the <code>PyLAMP-zero_day</code> repo, containing a description of the repository</li> <li>A <code>README.md</code> file, at the root of the folder of this project (i.e. 0x08-git), describing what this project is about</li> <li>Do not use GitHub\u2019s web UI, but the command line to perform the exercise (except for operations that can not possibly be done any other way than through the web UI). You won\u2019t be able to perform many of the task requirements on the web UI, and you should start getting used to the command line for simple tasks because many complex tasks can only be done via the command line.</li> <li>Your answer files should only contain the command, and nothing else</li> </ul>"},{"location":"se_basics/0x08-git/#more-info","title":"More Info","text":""},{"location":"se_basics/0x08-git/#install-git","title":"Install <code>git</code>","text":"<p>If <code>git</code> is not already installed on your terminal:</p> <pre><code>$ sudo apt-get update\n$ sudo apt-get upgrade\n$ sudo apt-get install git\n</code></pre>"},{"location":"se_basics/0x08-git/#basic-usage","title":"Basic usage","text":"<p>At the end of this project you should be able to reproduce and understand these command lines:</p> <pre><code>$ git clone &lt;repo&gt;\n$ touch test\n$ git add test\n$ git commit -m \"Initial commit\"\n$ git push origin main\n</code></pre>"},{"location":"se_basics/0x08-git/#tasks","title":"Tasks","text":""},{"location":"se_basics/0x08-git/#0-create-and-setup-your-git-and-github-account","title":"0. Create and setup your Git and GitHub account","text":"<p>Step 0 - Create an account on GitHub [if you do not have one already]</p> <p>You will need a GitHub account for all your projects at the PyLAMP Program. If you do not already have a github.com account, you can create an account for free here.</p> <p>Step 1 - Create a Personal Access Token on Github</p> <p>To have access to your repositories and authenticate yourself, you need to create a Personal Access Token on Github.</p> <p>You can follow this tutorial to create a token.</p> <p>Once it\u2019s created, you should have a token that looks like this:</p> <p>Step 2 - Create your first repository</p> <p>Using the graphic interface on the github website, create your first repository. - Name: <code>PyLAMP-zero_day</code> - Description: <code>I'm now a PyLAMP Student, this is my first repository as a full-stack engineer</code> - Public repo - No <code>README</code>, <code>.gitignore</code>, or <code>license</code></p> <p>Step 3 - Clone your repository</p> <p>On your ubuntu, do the following: - Clone your repository</p> <pre><code>root@896cf839cf9a:/# git clone https://{YOUR_PERSONAL_TOKEN}@github.com/{YOUR_USERNAME}/PyLAMP-zero_day.git\nCloning into 'PyLAMP-zero_day'...\nwarning: You appear to have cloned an empty repository.\n</code></pre> <p>Replace {YOUR_PERSONAL_TOKEN} with your token from step 1</p> <p>Replace {YOUR_USERNAME} with your username from step 0 and 1</p> <p>Step 4 - Create the README.md and push the modifications</p> <p>Navigate to this new directory. Tips</p> <pre><code>root@896cf839cf9a:/# cd PyLAMP-zero_day/\nroot@896cf839cf9a:/PyLAMP-zero_day#\n</code></pre> <p>Create the file <code>README.md</code> with the content <code>My first readme</code>. Tips</p> <pre><code>root@896cf839cf9a:/PyLAMP-zero_day# echo 'My first readme' &gt; README.md\nroot@896cf839cf9a:/PyLAMP-zero_day# cat README.md\nMy first readme\n</code></pre> <p>Update your git identity</p> <pre><code>root@896cf839cf9a:/alx-pre_course# git config --global user.email \"you@example.com\"\nroot@896cf839cf9a:/alx-pre_course# git config --global user.name \"Your Name\"\n</code></pre> <p>Add this new file to git, commit the change with this message \u201cMy first commit\u201d and push to the remote server / origin</p> <pre><code>root@896cf839cf9a:/PyLAMP-zero_day# git add .\nroot@896cf839cf9a:/PyLAMP-zero_day# git commit -m 'My first commit'\n[master (root-commit) 98eef93] My first commit\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\nroot@896cf839cf9a:/PyLAMP-zero_day# git push\nEnumerating objects: 3, done.\nCounting objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 212 bytes | 212.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo https://github.com/{YOUR_USERNAME}/PyLAMP-zero_day.git\n * [new branch]      master -&gt; master\n</code></pre> <p>Good job!</p> <p>You pushed your first file in your first repository of the first task of your first PyLAMP Program project.</p> <p>You can now check your repository on GitHub to see if everything is good. Repo: - GitHub repository: <code>PyLAMP-zero_day</code> - File: <code>README.md</code></p>"},{"location":"se_basics/0x08-git/#1-repo-session","title":"1. Repo-session","text":"<p>Create a new directory called 0x08-git in your PyLAMP-zero_day repo.</p> <p>Make sure you include a not empty README.md in your directory: - at the root of your repository PyLAMP-zero_day - AND in the directory 0x03-git</p> <p>And importantly: Make sure your commit and push your code to Github</p> <p>Repo: - GitHub repository: <code>PyLAMP-zero_day</code> - Directory: <code>0x08-git</code></p>"},{"location":"se_basics/0x08-git/#2-coding-fury-road","title":"2. Coding fury road","text":"<p>For the moment we have an empty project directory containing only a <code>README.md</code>. It\u2019s time to code!</p> <ul> <li>Create these directories at the root of your project: <code>bash</code>, <code>c</code>, <code>js</code></li> <li>Create these empty files:<ul> <li>c/c_is_fun.c</li> <li>js/main.js</li> <li>js/index.js</li> </ul> </li> <li>Create a file <code>bash/PyLAMP</code> with these two lines inside: <code>#!/bin/bash</code> and <code>echo \"PyLAMP\"</code></li> <li>Create a file <code>bash/school</code> with these two lines inside: <code>#!/bin/bash</code> and <code>echo \"School\"</code></li> <li>Add all these new files to git</li> <li>Commit your changes (message: \u201cStarting to code today, so cool\u201d) and push to the remote server</li> </ul> <p>Repo: - GitHub repository: <code>PyLAMP-zero_day</code> - Directory: <code>0x08-git</code> - File:  <code>bash/alx</code>, <code>bash/school</code>, <code>c/c_is_fun.c</code>, <code>js/main.js</code>, <code>js/index.js</code></p>"},{"location":"se_basics/0x08-git/#3-collaboration-is-the-base-of-a-company","title":"3. Collaboration is the base of a company","text":"<p>A branch is like a copy of your project. It\u2019s used mainly for: - adding a feature in development - collaborating on the same project with other developers - not breaking your entire repository - not upsetting your co-workers</p> <p>The purpose of a branch is to isolate your work from the main code base of your project and/or from your co-workers\u2019 work.</p> <p>For this project, create a branch <code>update_script</code> and in this branch:</p> <ul> <li>Create an empty file named <code>bash/98</code></li> <li>Update <code>bash/alx</code> by replacing echo \"PyLAMP\" with echo \"PyLAMP School\"</li> <li>Update bash/school by replacing echo \"School\" with echo \"The school is open!\"</li> <li>Add and commit these changes (message: \u201cMy personal work\u201d)</li> <li>Push this new branch Tips Perfect! You did an amazing update in your project and it\u2019s isolated correctly from the main branch.</li> </ul> <p>Ho wait, your manager needs a quick fix in your project and it needs to be deployed now:</p> <ul> <li>Change branch to <code>main</code></li> <li>Update the file <code>bash/PyLAMP</code> by replacing echo \"PyLAMP\" with echo \"PyLAMP School is so cool!\"</li> <li>Delete the directory js</li> <li>Commit your changes (message: \u201cHot fix\u201d) and push to the origin Ouf, hot fix is done!</li> </ul> <p>Repo: - GitHub repository: <code>PyLAMP-zero_day</code> - Directory: <code>0x08-git</code> - File:   <code>bash/alx</code>, <code>bash/school</code>, <code>bash/98</code></p>"},{"location":"se_basics/0x08-git/#4-collaboration-be-up-to-date","title":"4. Collaboration: be up to date","text":"<p>Of course, you can also work on the same branch as your co-workers and it\u2019s best if you keep up to date with their changes.</p> <p>For this task \u2013 and only for this task \u2013 please update your file <code>README.md</code> in the main branch from GitHub.com. It\u2019s the only time you are allowed to update and commit from GitHub interface.</p> <p>After you have done that, in your terminal:</p> <ul> <li>Get all changes of the main branch locally (i.e. your README.md file will be updated)</li> <li>Create a new file <code>up_to_date</code> at the root of your directory and in it, write the git command line used</li> <li>Add <code>up_to_date</code> to git, commit (message: \u201cHow to be up to date in git\u201d), and push to the origin</li> </ul> <p>Repo: - GitHub repository: <code>PyLAMP-zero_day</code> - Directory: <code>0x08-git</code> - File: <code>README.md</code>, <code>up_to_date</code></p>"},{"location":"se_basics/0x08-git/#5-haaa-what-did-you-do","title":"5. HAAA what did you do???","text":"<p>Collaboration is cool, but not really when you update the same file at the same time\u2026</p> <p>To illustrate that, please merge the branch <code>update_script</code> to <code>main</code>: \u201cCool, all my changes will be now part of the main branch, ready to be deployed!\u201d HHHHHHHAAAAAAAA</p> <pre><code>CONFLICT (content): Merge conflict in bash/alx\n</code></pre> <p>As you can see, you have conflicts between two branches on the same file.</p> <p>Your goal now is to resolve conflicts by using the version of the branch <code>update_script</code>, and push the result to the origin.</p> <p>At the end, you should have all your work from the branch <code>update_script</code> (new file and two updated files) and all latest <code>main</code> commits (new files, delete folder, etc.), without conflicts.</p> <p>Repo: - GitHub repository: <code>PyLAMP-zero_day</code> - Directory: <code>0x08-git</code></p>"},{"location":"se_basics/0x08-git/#6-never-push-too-much","title":"6. Never push too much","text":"<p>Create a <code>.gitignore</code> file and define a rule to never push <code>~</code> files (generated by Emacs). Tips</p> <p>At the end, you should have all your work from the branch <code>update_script</code> (new file and two updated files) and all latest <code>main</code> commits (new files, delete folder, etc.), without conflicts.</p> <p>Repo: - GitHub repository: <code>PyLAMP-zero_day</code> - Directory: <code>0x08-git</code> - File: <code>.gitignore</code></p>"},{"location":"se_basics/0x09-markdown/","title":"Overview","text":"<p>Markdown is a lightweight markup language that uses plain text formatting syntax to create formatted documents, making it easy to write and read.</p> <p>It's widely used for blogging, documentation, and other web content creation.</p>"},{"location":"se_basics/0x09-markdown/#resources","title":"Resources :","text":"<p>The resources provided below explain more on the concept of markdown.</p> <ul> <li>A markdown guide</li> </ul>"},{"location":"se_basics/setting_up_your_local_coding_environment/","title":"Setting up your local coding environment","text":"<p><code>DevOps</code> <code>Virtual machine</code></p> <p>Most of the projects in this program are supposed to be done in a Linux (Ubuntu) environment.</p> <p>For that matter, you will need to set up a similar environment for that purpose. This project is therefore a guide for you to set up the necessary coding environment irrespective of the operating system that you are using.</p>"},{"location":"se_basics/setting_up_your_local_coding_environment/#guide-to-running-ubuntu-on-different-operating-systems","title":"Guide to running Ubuntu on different operating systems","text":"<ol> <li>For Windows You have three options for running Ubuntu on Windows:</li> <li> <p>WSL: <code>WSL (Windows Subsystem for Linux)</code> is a feature that allows you to run Linux distributions natively on Windows. WSL is the easiest option to set up and use, and it provides a good introduction to Ubuntu.</p> </li> <li> <p>Vagrant: <code>Vagrant</code> is a tool for creating and managing virtual machines. It is a good option if you need to run Ubuntu for development or testing purposes, as it allows you to create isolated environments that are easy to replicate and share.</p> </li> <li> <p>Docker: <code>Docker</code> is a tool for containerizing applications. It is a good option if you need to run Ubuntu for specific tasks, such as running a web server or database. But also remember using docker will need an installation of WSL.</p> </li> <li> <p>For macOS If you have:</p> </li> <li> <p>a Mac with an Apple Silicon chip, you can only use Docker to run <code>Ubuntu</code>.</p> </li> <li>a Mac with an Intel chip, you can use <code>Vagrant</code> or <code>Docker</code>.</li> </ol>"},{"location":"se_basics/setting_up_your_local_coding_environment/#resources","title":"Resources","text":"<ul> <li>Virtual Machine</li> <li>man uname</li> </ul>"},{"location":"se_basics/setting_up_your_local_coding_environment/#learning-objectives","title":"Learning Objectives","text":"<ul> <li>What is a virtual machine</li> <li>What is Vagrant</li> <li>Who wrote Vagrant</li> <li>What is Ubuntu</li> <li>What does \u201cUbuntu\u201d mean</li> <li>How to use VMs with Vagrant</li> <li>What does the command <code>uname</code> do</li> </ul>"},{"location":"se_basics/setting_up_your_local_coding_environment/#general-requirements","title":"General Requirements","text":"<ul> <li>A <code>README.md</code> file at the root of the repo, containing a description of the repository.</li> <li>A <code>README.md</code> file, at the root of the folder of this project (i.e. <code>0x00-wsl</code>), describing what this project is about.</li> </ul>"},{"location":"se_basics/setting_up_your_local_coding_environment/#more-info","title":"More Info","text":""},{"location":"se_basics/setting_up_your_local_coding_environment/#install-git","title":"Install <code>git</code>","text":"<p>If <code>git</code> is not already installed on your terminal:</p> <pre><code>$ sudo apt-get update\n$ sudo apt-get upgrade\n$ sudo apt-get install git\n</code></pre>"},{"location":"se_basics/setting_up_your_local_coding_environment/#basic-usage","title":"Basic usage","text":"<p>At the end of this project you should be able to reproduce and understand these command lines:</p> <pre><code>$ git clone &lt;repo&gt;\n$ touch test\n$ git add test\n$ git commit -m \"Initial commit\"\n$ git push origin main\n</code></pre>"},{"location":"se_basics/setting_up_your_local_coding_environment/#tasks","title":"Tasks","text":""},{"location":"se_basics/setting_up_your_local_coding_environment/#0-create-and-setup-your-git-and-github-account","title":"0. Create and setup your Git and GitHub account","text":"<p>You will need Git for this project, you might have to install it on your computer if it\u2019s not done yet.</p> <ul> <li>Configure your basic info (name, email) on your local machine \u2013 they will be part of your commits. Tips</li> </ul> <p>On GitHub.com:</p> <ul> <li>Using the graphic interface on the website, create the repository (if it\u2019s not done yet)<ul> <li>Description: <code>This is my first repository as a full-stack engineer</code></li> <li>Public repo: <code>zero_day</code></li> <li>No <code>README</code>, <code>.gitignore</code>, or <code>license</code></li> </ul> </li> </ul> <p>On your computer, open a terminal and do the following:</p> <ul> <li>Navigate to your home directory. Tips</li> <li>Create a directory <code>zero_day</code>. Tips</li> <li>Navigate to this new directory. Tips</li> <li>Initialize git and add the remote origin</li> <li>Create a file <code>README.md</code> with Vi (or other command line editors) and write a small Markdown text to present this project. This file is mandatory in projects</li> <li>Add this new file to git, commit the change with this message \u201cMy first commit\u201d and push to the remote server / origin (Note: You will probably need to set your login/password to push to the remote server) Good job!</li> </ul> <p>You pushed your first file in your first repository of the first task of your first PyLAMP Program project.</p> <p>Repo:</p> <ul> <li>GitHub repository: <code>zero_day</code></li> <li>File: <code>README.md</code></li> </ul>"},{"location":"se_basics/setting_up_your_local_coding_environment/#1-hello-ubuntu","title":"1. Hello Ubuntu","text":"<p>Inside the <code>zero_day</code> repo, create a new directory called <code>0x00-wsl</code>. Add a <code>README.md</code> file to this directory.</p> <p>On Ubuntu in your wsl. What does the command <code>uname</code> print when you run it without any option?</p> <p>Type your answer into a file in the <code>0x00-wsl</code> directory and push it to <code>GitHub</code>. Name your file accordingly as shown below.</p> <p>Repo:</p> <ul> <li>GitHub repository: <code>zero_day</code></li> <li>Directory: <code>0x00-wsl</code></li> <li>File: <code>0-hello_ubuntu</code></li> </ul>"}]}